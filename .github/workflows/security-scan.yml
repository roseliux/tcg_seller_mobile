name: JavaScript Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Mondays at 9:00 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    name: Scan for JS Security Vulnerabilities
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: npm-audit
        run: |
          echo "## NPM Audit Results" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level=moderate --production || {
            echo "⚠️ Vulnerabilities found in dependencies" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm audit fix\` to fix automatically fixable issues" >> $GITHUB_STEP_SUMMARY
            exit 0
          }
          echo "✅ No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Generate npm audit report
        if: always()
        run: |
          npm audit --json > npm-audit-report.json || true
          echo "Audit report generated"

      - name: Upload npm audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json
          retention-days: 30

      - name: Install ESLint security plugins
        run: |
          npm install --no-save \
            eslint \
            eslint-plugin-security \
            eslint-plugin-no-secrets \
            @typescript-eslint/parser \
            @typescript-eslint/eslint-plugin

      - name: Run ESLint security scan
        id: eslint-scan
        run: |
          echo "## ESLint Security Scan Results" >> $GITHUB_STEP_SUMMARY
          npx eslint . \
            --ext .js,.jsx,.ts,.tsx \
            --plugin security \
            --plugin no-secrets \
            --rule 'security/detect-object-injection: error' \
            --rule 'security/detect-non-literal-regexp: warn' \
            --rule 'security/detect-unsafe-regex: error' \
            --rule 'security/detect-buffer-noassert: error' \
            --rule 'security/detect-child-process: warn' \
            --rule 'security/detect-disable-mustache-escape: error' \
            --rule 'security/detect-eval-with-expression: error' \
            --rule 'security/detect-no-csrf-before-method-override: error' \
            --rule 'security/detect-non-literal-fs-filename: warn' \
            --rule 'security/detect-non-literal-require: warn' \
            --rule 'security/detect-possible-timing-attacks: warn' \
            --rule 'security/detect-pseudoRandomBytes: error' \
            --rule 'no-secrets/no-secrets: error' \
            --format stylish \
            --max-warnings 0 || {
            echo "⚠️ Security issues found in code" >> $GITHUB_STEP_SUMMARY
            exit 0
          }
          echo "✅ No security issues found in code" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Check for common secrets and patterns
        id: secret-scan
        run: |
          echo "## Secret Pattern Scan Results" >> $GITHUB_STEP_SUMMARY
          # Check for common secret patterns
          if grep -r -E "(password|secret|api_key|apikey|access_token|auth_token|private_key)\s*=\s*['\"][^'\"]+['\"]" \
            --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" \
            --exclude-dir=node_modules --exclude-dir=.git \
            . > /dev/null 2>&1; then
            echo "⚠️ Potential hardcoded secrets found" >> $GITHUB_STEP_SUMMARY
            echo "Please review the code for hardcoded credentials" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ No obvious hardcoded secrets detected" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true

      - name: Summary
        if: always()
        run: |
          echo "## Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Security scanning has completed. Please review the results above." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- Review npm audit findings and update dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Fix any ESLint security rule violations" >> $GITHUB_STEP_SUMMARY
          echo "- Remove any hardcoded secrets or credentials" >> $GITHUB_STEP_SUMMARY
